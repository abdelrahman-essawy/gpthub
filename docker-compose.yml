version: '3.8'
services:
  #  gateway:
  #    container_name: gateway
  #    build:
  #      dockerfile: apps/Dockerfile
  #    ports:
  #      - "3000:3000"
  #    volumes:
  #      - .:/app
  #    environment:
  #      NODE_ENV: "development"
  #      PORT: 3000
  #    command:
  #      - npx
  #      - nx
  #      - run
  #      - gateway:serve:development
  #    restart: on-failure
  #  auth:
  #    container_name: auth
  #    build:
  #      dockerfile: apps/Dockerfile
  #    ports:
  #      - "3010:3010"
  #    volumes:
  #      - .:/app
  #    env_file:
  #      - .env
  #    environment:
  #      NODE_ENV: "development"
  #      PORT: 3010
  #      DATABASE_URL: ${USERS_POSTGRES_URL}
  #    command: [ "npm", "run", "prisma:migrate", "&&", "nx", "run", "auth:serve" ]
  #    networks:
  #      - GptHub
  #    restart: on-failure
  #    depends_on:
  #      - postgres


  #
  #  users-database-exporter:
  #    image: bitnami/postgres-exporter
  #    environment:
  #      - DATA_SOURCE_NAME=${USERS_POSTGRES_URL}
  #    depends_on:
  #      - users-database
  #
  #  kong:
  #    image: kong
  #    container_name: kong
  #    restart: on-failure
  #    ports:
  #      - "80:8000"
  #      - "8443:8443"
  #      - "8001:8001"
  #      - "8002:8002"
  #      - "8444:8444"
  #    environment:
  #      KONG_DATABASE: postgres
  #      KONG_PG_HOST: ${KONG_POSTGRES_HOST}
  #      KONG_PG_PORT: ${KONG_POSTGRES_PORT}
  #      KONG_PG_USER: ${KONG_POSTGRES_USER}
  #      KONG_PG_PASSWORD: ${KONG_POSTGRES_PASSWORD}
  #      KONG_PG_DATABASE: ${KONG_POSTGRES_DB}
  #      KONG_PROXY_ACCESS_LOG: /dev/stdout
  #      KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #      KONG_PROXY_ERROR_LOG: /dev/stderr
  #      KONG_ADMIN_ERROR_LOG: /dev/stderr
  #      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
  #      KONG_DECLARATIVE_CONFIG: /opt/kong/kong.yaml
  #      KONG_ADMIN_GUI_PATH: /admin
  #      KONG_ADMIN_GUI_URL: http://localhost:8002/admin
  #    command: sh -c "kong migrations bootstrap && kong start"
  #    volumes:
  #      - ./kong.yaml:/opt/kong/kong.yaml
  #      - kong-data:/usr/local/kong/
  #    depends_on:
  #      - kong-database
  #    extra_hosts:
  #      - "host.docker.internal:host-gateway"
  #
  #  kong-database:
  #    image: postgres:alpine
  #    ports:
  #      - ${KONG_POSTGRES_PORT}:${DEFAULT_POSTGRES_PORT}
  #    expose:
  #      - ${KONG_POSTGRES_PORT}
  #    environment:
  #      POSTGRES_USER: ${KONG_POSTGRES_USER}
  #      POSTGRES_PASSWORD: ${KONG_POSTGRES_PASSWORD}
  #      POSTGRES_DB: ${KONG_POSTGRES_DB}
  #    volumes:
  #      - kong-postgres-data:/var/lib/postgresql/data

  apollo-router:
    container_name: router
    image: ghcr.io/apollographql/router:v1.57.0
    volumes:
      - ./apps/backend/router/supergraph.graphql:/dist/schema/supergraph.graphql
      - ./apps/backend/router/router.yaml:/dist/config/router.yaml
    command: [ "--dev", "-c", "config/router.yaml", "-s", "schema/supergraph.graphql", "--log", "info" ]
    ports:
      - "3000:3000"

  users-database:
    image: postgres:alpine
    ports:
      - ${USERS_POSTGRES_PORT}:${DEFAULT_POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${USERS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${USERS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${USERS_POSTGRES_DB}
    volumes:
      - users-postgres-data:/var/lib/postgresql/data

  resources-postgres-database:
    image: postgres:alpine
    ports:
      - ${RESOURCES_POSTGRES_PORT}:${DEFAULT_POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${RESOURCES_POSTGRES_USER}
      POSTGRES_PASSWORD: ${RESOURCES_POSTGRES_PASSWORD}
      POSTGRES_DB: ${RESOURCES_POSTGRES_DB}
    volumes:
      - resources-postgres-data:/var/lib/postgresql/data

  resources-mongo-database:
    image: mongo:jammy
    ports:
      - ${RESOURCES_MONGO_PORT}:${DEFAULT_MONGO_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${RESOURCES_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${RESOURCES_MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${RESOURCES_MONGO_DB}
    volumes:
      - resources-mongo-data:/data/db



  rooms-postgres-database:
    image: postgres:alpine
    ports:
      - ${ROOMS_POSTGRES_PORT}:${DEFAULT_POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${ROOMS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ROOMS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${ROOMS_POSTGRES_DB}
    volumes:
      - rooms-postgres-data:/var/lib/postgresql/data

volumes:
  kong-data:
  kong-postgres-data:
  users-postgres-data:
  resources-mongo-data:
  resources-postgres-data:
  rooms-postgres-data:

